version: '3.9'

services:
  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
      - redis:/var/lib/redis
      - redis-config:/usr/local/etc/redis/redis.conf
    command: ["redis-server", "--appendonly", "yes"]
    restart: unless-stopped

  redis-ui:
    image: rediscommander/redis-commander:latest
    container_name: redis-ui
    environment:
      REDIS_HOSTS: redis
      REDIS_HOST: redis
      REDIS_PORT: redis:6379
      REDIS_PASSWORD: redis123
      HTTP_USER: root
      HTTP_PASSWORD: root
    ports:
      - "8081:8081"
    depends_on:
      - redis
    restart: unless-stopped

  postgres:
    image: postgres:latest
    container_name: postgres
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin123
      POSTGRES_DB: my_database
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin123
    ports:
      - "8080:80"
    depends_on:
      - postgres
    restart: unless-stopped

  flask-app:
    build:
      context: .
    container_name: flask-app
    environment:
      DB_NAME: my_database
      DB_USER: admin
      DB_PASSWORD: admin123
      DB_HOST: postgres
      DB_PORT: 5432
      REDIS_HOST: redis
      REDIS_PORT: 6379
    ports:
      - "5000:5000"
    depends_on:
      - postgres
      - redis
    restart: unless-stopped

volumes:
  redis:
  redis-config:
  redis_data:
  postgres_data:
